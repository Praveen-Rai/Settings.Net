// Copyright (c) 2020 Praveen Rai
// This code is licensed under MIT license (see LICENSE.txt for details)

using System;
using System.Collections.Generic;
using ApplicationSettings.Core;
using ApplicationSettings.Storage.JSON;
using System.Reflection;
using TestPlugin;

namespace TestClient
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");

            var settings = new SampleSettingsCollection();
            
            List<SettingsCollectionBase> collectionBases = new List<SettingsCollectionBase>();
            collectionBases.Add(settings);

            //var mgr = new SettingsManager(new SettingsStorageJSON(Environment.CurrentDirectory + @"\Test.json"), collectionBases);
            var mgr = SettingsManager.CreateSettingsManager(new SettingsStorageJSON(Environment.CurrentDirectory + @"\Test.json"), collectionBases);

            var mgr2 = SettingsManager.CreateSettingsManager(new SettingsStorageJSON(Environment.CurrentDirectory + @"\Test.json"), collectionBases);

            var colls = mgr.SettingsCollections;

        }

        // Exploring use-cases in the client
        public void ExUsage()
        {

            // If interface is defined for ApplicationSettingsManager the client will be able to pass the implementatin using DI
            //var SettingsMgr = new SettingsManager(new SettingsStorageJSON(Environment.CurrentDirectory + @"\Test.json"));
            
            //// Adding a type to be tracked. Instance is not required, it can be generated by the library using storage / default values
            //// Using the type enables the library to look into more details, e.g. DefiningAssembly, BaseType, DeclaringType etc.
            //SettingsMgr.AddType(typeof(SampleSettingsCollection));

            //// Get the instance from the manager, it will either come from Storage or Defaults defined in the collection
            //var settingsCollection1 = SettingsMgr.GetInstance<SampleSettingsCollection>();

            //settingsCollection1.ValidateSettings();

            //settingsCollection1.Save();
            
        }
    }
}
